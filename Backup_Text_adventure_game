# a text-based adventure game set in a hospital

import time
import sys
from tkinter import *
from tkinter.ttk import *
import random
from tkinter import font
import tkinter as tk



root = Tk()
root.geometry("800x700")
root['bg'] = 'black'
root.resizable(0,0)

canvas = Canvas(root, height=700, width=800)
canvas.pack()

#1 logo frame <- first pg
frame = tk.Frame(root, bg="black")
frame.place(relwidth=1, relheight=1)

photo = PhotoImage(file="H:\Logo_page.png")
photo_label = tk.Label(frame, image=photo, bg='black') # making the image into a label
photo_label.place(x=-80, y=-10)

#2 frame1 stuff


f1_img = PhotoImage(file="H:/Frame1.png")
f1_pic_label = tk.Label(frame, image=f1_img, bg="black")

w = tk.Label(root,
             text='WELCOME!',
             bg='black',
             fg='white',
             font=('Times', 50)
             )

r = tk.Label(root,
             text=' The rules of the game are simple.\nChoose the command from given options.\nFind a way to escape.',
             bg='black',
             fg='white',
             font=('Times New Roman', 15),
             justify='center'
             )

# Game laoding stuff
f2_img = PhotoImage(file="H:\Loading....png")
f2_pic_label = tk.Label(frame, image=f2_img, bg="black")

# frame3 stuff
f3_img = PhotoImage(file ="H:\Frame3.png")
f3_pic_label = Label(frame, image=f3_img)
y = tk.Label(frame, text="You're back here again. \nYou know it's a dream, that’s for sure.\nBut you're stuck here. Stuck for too long.\nYou can't control all of it.\n It feels like it's the dream that controls you. \nYou are trapped in this twisted hospital.\n You can't wake up. You can't die.\n If you die, you wake up back in this room.\n\nAll you want is to be freed.",
                 font=("Times New Roman", 15), justify="center", bg="#010e16", fg="white")

# frame4 stuff
b4 = tk.Button(frame, text='Quit', bg='black', fg='white', font=('Times New Roman', 20, 'bold'), border=2, command=root.destroy)
#f4_img = PhotoImage(file = "C:/Users/shrirang/Downloads/Frame4.png")
#f4_pic_label = Label(frame, image=f4_img)
y1 = tk.Label(frame, text="A white room.\nA single bed. One window.\nThere is a door that leads to the corridor.",
                 font=("Bell MT", 18), justify="center", bg="#0d1111", fg="white")

# map
frame_map = tk.Frame(root, bg='black')
ma = tk.Label(frame_map, text="\n —— —— —— —— —— —— —— —— —— \n| Terrace |  + `. * ,  . +  `.  *` . . + ,  *  ` . + ,  .  *   |\n|———————————————|s|————|\n|              |    [▪⌂▪]---------------[▪⌂▪]----- t|               |\n|   First    | bathroom---|  |---cafeteria--- a|               |\n|    floor   |                 [▪⌂▪]                   |i|               |\n|              |            white_room             |r|               |\n|———————————————|s|————|\n|              |                  [▪⌂▪]---- waiting_area --[▪⌂▪] |\n| Ground |           operation_room-----|  |---morgue  |\n|   floor   |                                        [▪⌂▪]              |\n|             |                                         Exit              |\n —— —— —— —— —— —— —— —— —— ",
                  font=("Times New Roman", 14), bg="black", fg="white") #sorry for that ^ , I was trying to put it in one line... hehe
mt = tk.Label(frame_map, text='MAP', font=('Stencil', 22), bg="Black", fg="white")
#fmap_img = PhotoImage(file = "C:/Users/shrirang/Downloads/Map.png") # Storing the photo in a variable
#fmap_pic_label = Label(frame, image=fmap_img) # Converting the variable in to a label and storing it in a new variable

def map():

    #fmap_pic_label.img = fmap_img   # to keep the reference for the image.
    #fmap_pic_label.place(x=-10, y=-10)   # <--- place
    #frame_map.place(relx=0.15, rely=0.14, relwidth=0.7, relheight=0.7)
    ma.place(x=83, y=95)
    mt.place(x=245, y=65)

def map1():

    m1.place_forget()
    b4.place_forget()
    y1.place_forget()
    f4_pic_label.pack_forget()
    map() # I didn't know but after this function is completed the below Button works, it's so COOL
    c1 = tk.Button(frame, text='Close', bg='black', fg='white', font=('Courier', 20, 'bold'), border=2,
                   command=frame4)
    c1.place(x=707, y=630)


def frame4():

    global m1   # This is used when you are defining a variable in the def function but using it outside the def function. It technically becomes universal
    y.place_forget()
    b3.place_forget()
    f3_pic_label.pack_forget()
    for c1 in frame.winfo_children(): # This rarely works, but frame.winfo_children considers all the widgets in the frame, e.g. button, label, etc.
        c1.place_forget()
        frame_map.place_forget()
        ma.place_forget()
        mt.place_forget()

    #f4_pic_label.img = f4_img
    #f4_pic_label.pack()

    y1.place(x=35, y=150)

    m1 = tk.Button(frame, text='Map', bg='black', fg='white', font=('Bradley Hand ITC', 20, 'bold'), border=2,
                   command=map1)
    m1.place(x=15, y=15)

    b4 = tk.Button(frame, text='Quit', bg='black', fg='white', font=('Bradley Hand ITC', 20, 'bold'), border=2, command=root.destroy)
    b4.place(x=710, y=630)

def frame3():

    global b3
    f2_pic_label.destroy()
    f3_pic_label.img = f3_img
    f3_pic_label.pack()
    y.place(x=30,y=180)

    b3 = tk.Button(frame, text='Next', bg='black', fg='white', font=('Bradley Hand ITC', 20, 'bold'), border=2,
                  command=frame4)
    b3.place(relx=0.20, rely=0.74)


def frame2():

    b2.destroy()
    f1_pic_label.destroy()
    w.destroy()
    r.destroy()

    f2_pic_label.img = f2_img
    f2_pic_label.place(x=126,y=170)

    root.after(2000, frame3)


def frame1():

    global b2
    b1.destroy()
    photo_label.destroy()
    exit_button.destroy()
    w.place(relx=0.275, rely=0.09)
    r.place(relx=0.3, rely=0.65)

    f1_pic_label.img = f1_img  # to keep the reference for the image.
    f1_pic_label.place(x=135,y=160)  # <--- pack

    b2 = tk.Button(frame, text='Click me!', bg='black', fg='white', font=('Times', 16, 'bold'), border=3, command=frame2)
    b2.place(relx=0.44, rely=0.79)


b1 = tk.Button(frame, text='START', bg='black', fg='white', font=('Courier', 18, 'bold'), border=3, command=frame1)
b1.place(relx=0.439, rely=0.60) # It's out of the def function, hence is the first most button that appears, the click button

exit_button = tk.Button(frame, text='QUIT', bg='black', fg='white', font=('Courier', 18, 'bold'), border=3, command=root.destroy)
exit_button.place(relx=0.448, rely=0.70)


root.mainloop() # Last thing that should exist, the excution function
